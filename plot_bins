#!/usr/bin/python

# timetag-tools - Tools for UMass FPGA timetagger
#
# Copyright Â© 2010 Ben Gamari
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/ .
#
# Author: Ben Gamari <bgamari@physics.umass.edu>
#

import struct
from matplotlib import pyplot as pl
from collections import defaultdict
import sys

TAGGER_HZ = 30e6

take_channels = map(int, sys.argv[1:])
if len(take_channels) == 0:
        take_channels = range(4)

channels = defaultdict(lambda: ([], []))
bin_fmt = 'iQII'
bin_sz = struct.calcsize(bin_fmt)
while True:
        d = sys.stdin.read(bin_sz)
        if len(d) != bin_sz: break

        chan_n, time, count, lost = struct.unpack(bin_fmt, d)
        if chan_n not in take_channels: continue

        channels[chan_n][0].append(float(time)/TAGGER_HZ)
        channels[chan_n][1].append(count)

if len(channels) == 0:
	print "No data to plot"
	exit(1)

for c, (times, counts) in channels.items():
        pl.plot(times, counts)

pl.show()

