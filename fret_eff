#!/usr/bin/python

import sys
import struct
import scipy
from matplotlib import pyplot as pl

donor_ch = int(sys.argv[1])
acceptor_ch = int(sys.argv[2])

gamma = 1.0
intensity_thresh = None
if len(sys.argv) > 3:
        intensity_thresh = float(sys.argv[3])


donor_bins = []
acceptor_bins = []

bin_fmt = 'iQII'
bin_sz = struct.calcsize(bin_fmt)
while True:
        d = sys.stdin.read(bin_sz)
        if len(d) != bin_sz: break

        chan_n, time, count, lost = struct.unpack(bin_fmt, d)
        if chan_n == donor_ch:
                donor_bins.append(count)
        elif chan_n == acceptor_ch:
                acceptor_bins.append(count)

donor_bins = scipy.array(donor_bins)
acceptor_bins = scipy.array(acceptor_bins)

def normalize(f):
        mean = scipy.mean(f)

donor_bins = donor_bins / scipy.mean(donor_bins)
acceptor_bins = acceptor_bins / scipy.mean(acceptor_bins)
sum = donor_bins + acceptor_bins

fret_eff = 1.0 / (1 + gamma*donor_bins/acceptor_bins)

if intensity_thresh:
        fret_eff = fret_eff[scipy.where(sum > intensity_thresh)]
        pl.hist(fret_eff)
        pl.show()
else:
        pl.plot(sum)
        pl.show()

